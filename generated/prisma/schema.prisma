// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                 String           @id @default(uuid())
  brand              String
  title              String
  description        String
  price              Float
  productImages      Image[]
  productInformation String
  isNew              Boolean          @default(false)
  isTrending         Boolean          @default(false)
  salesCount         Int              @default(0)
  categoryId         String
  category           Category         @relation(fields: [categoryId], references: [id])
  options            ProductOption[]
  variants           ProductVariant[]
  reviews            Review[]
  createdAt          DateTime         @default(now())
  updatedAt          DateTime         @updatedAt
}

model ProductOption {
  id        String               @id @default(uuid())
  name      String
  productId String
  product   Product              @relation(fields: [productId], references: [id])
  values    ProductOptionValue[]
}

model ProductVariantOption {
  id               String         @id @default(uuid())
  name             String
  value            String
  productVariantId String
  product          ProductVariant @relation(fields: [productVariantId], references: [id])
}

model ProductOptionValue {
  id       String        @id @default(uuid())
  value    String
  optionId String
  option   ProductOption @relation(fields: [optionId], references: [id])
}

model ProductVariant {
  id        String                 @id @default(uuid())
  productId String
  product   Product                @relation(fields: [productId], references: [id])
  sku       String                 @unique
  price     Float
  stock     Int
  options   ProductVariantOption[]
  images    Image[]
  createdAt DateTime               @default(now())
  updatedAt DateTime               @updatedAt
}

model Category {
  id            String     @id @default(uuid())
  title         String
  slug          String     @unique
  parentId      String?
  parent        Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id])
  subcategories Category[] @relation("CategoryHierarchy")
  products      Product[]
  images        Image[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Review {
  id        String   @id @default(uuid())
  rating    Int
  title     String?
  comment   String?
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  name     String
  password String
  reviews  Review[]
  // Add wishlist, orders etc.
}

model Image {
  id               String          @id @default(uuid())
  url              String
  altText          String?
  productId        String?
  product          Product?        @relation(fields: [productId], references: [id])
  categoryId       String?
  category         Category?       @relation(fields: [categoryId], references: [id])
  bannerId         String?
  banner           Banner?         @relation(fields: [bannerId], references: [id])
  productVariantId String?
  productVariant   ProductVariant? @relation(fields: [productVariantId], references: [id])
}

model Banner {
  id          String   @id @default(uuid())
  title       String
  description String
  link        String
  images      Image[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model HomepageWidget {
  id          String       @id @default(uuid())
  type        WidgetType
  title       String?
  order       Int
  widgetItems WidgetItem[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model WidgetItem {
  id        String         @id @default(uuid())
  widgetId  String
  widget    HomepageWidget @relation(fields: [widgetId], references: [id])
  type      WidgetItemType
  itemId    String
  order     Int
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

enum WidgetType {
  HERO_BANNER
  PRODUCT_CAROUSEL
  CATEGORY_GRID
  CUSTOM_SECTION
}

enum WidgetItemType {
  PRODUCT
  CATEGORY
  BANNER
}
